{"ast":null,"code":"import axios from \"axios\";\nimport { getToken } from \"./postTokenAction\";\nexport const GET_USER_PROFILE = \"GET_USER_PROFILE\";\nexport const getUserProfile = formData => {\n  // Accepte formData en tant que paramètre\n  return dispatch => {\n    // Appelle l'action getToken pour obtenir le token\n    getToken(formData) // Utilise les données passées depuis l'appel\n    .then(token => {\n      if (token) {\n        // Utilise le token dans la requête Axios pour obtenir le profil\n        axios.post(\"http://localhost:3001/api/v1/user/profile\", {}, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }).then(res => {\n          console.log(res.data.body);\n          dispatch({\n            type: GET_USER_PROFILE,\n            payload: res.data.body\n          });\n        });\n      }\n    });\n  };\n};","map":{"version":3,"sources":["/Users/guillaumemacbookpro/Desktop/Redux/src/_actions/userProfileAction.js"],"names":["axios","getToken","GET_USER_PROFILE","getUserProfile","formData","dispatch","then","token","post","headers","Authorization","res","console","log","data","body","type","payload"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,mBAAzB;AAEA,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AAEP,OAAO,MAAMC,cAAc,GAAIC,QAAD,IAAc;AAC1C;AACA,SAAQC,QAAD,IAAc;AACnB;AACAJ,IAAAA,QAAQ,CAACG,QAAD,CAAR,CAAmB;AAAnB,KACGE,IADH,CACSC,KAAD,IAAW;AACf,UAAIA,KAAJ,EAAW;AACT;AACAP,QAAAA,KAAK,CACFQ,IADH,CAEI,2CAFJ,EAGI,EAHJ,EAII;AACEC,UAAAA,OAAO,EAAE;AACPC,YAAAA,aAAa,EAAG,UAASH,KAAM;AADxB;AADX,SAJJ,EAUGD,IAVH,CAUSK,GAAD,IAAS;AACbC,UAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAJ,CAASC,IAArB;AACAV,UAAAA,QAAQ,CAAC;AAAEW,YAAAA,IAAI,EAAEd,gBAAR;AAA0Be,YAAAA,OAAO,EAAEN,GAAG,CAACG,IAAJ,CAASC;AAA5C,WAAD,CAAR;AACD,SAbH;AAcD;AACF,KAnBH;AAoBD,GAtBD;AAuBD,CAzBM","sourcesContent":["import axios from \"axios\";\nimport { getToken } from \"./postTokenAction\";\n\nexport const GET_USER_PROFILE = \"GET_USER_PROFILE\";\n\nexport const getUserProfile = (formData) => {\n  // Accepte formData en tant que paramètre\n  return (dispatch) => {\n    // Appelle l'action getToken pour obtenir le token\n    getToken(formData) // Utilise les données passées depuis l'appel\n      .then((token) => {\n        if (token) {\n          // Utilise le token dans la requête Axios pour obtenir le profil\n          axios\n            .post(\n              \"http://localhost:3001/api/v1/user/profile\",\n              {},\n              {\n                headers: {\n                  Authorization: `Bearer ${token}`,\n                },\n              }\n            )\n            .then((res) => {\n              console.log(res.data.body);\n              dispatch({ type: GET_USER_PROFILE, payload: res.data.body });\n            });\n        }\n      });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}