{"ast":null,"code":"var _s = $RefreshSig$();\n\n//\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nconst Credentials = {\n  email: `tony@stark.com`,\n  password: `password123`\n};\nexport const GET_PROFILE = \"GET_PROFILE\";\nexport const useProfile = () => {\n  _s();\n\n  const [token, setToken] = useState(\"\");\n  useEffect(() => {\n    axios.post(\"http://localhost:3001/api/v1/user/login\", Credentials).then(resToken => {\n      console.log(resToken.data.token);\n      setToken(resToken.data.token);\n    }).catch(error => {\n      console.error(\"Error fetching token:\", error);\n    });\n  }, []); // Empty dependency array means this effect runs once after component mount.\n\n  const getProfile = () => {\n    axios.post(\"http://localhost:3001/api/v1/user/profile\", {}, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => {\n      console.log(res);\n    }).catch(error => {\n      console.error(\"Error fetching profile:\", error);\n    });\n  };\n\n  return getProfile;\n};\n\n_s(useProfile, \"uRWVyxPfKU3Lv5uAeNftFtP/ZvU=\");","map":{"version":3,"sources":["/Users/guillaumemacbookpro/Desktop/Redux/src/_actions/postAction.js"],"names":["axios","useState","useEffect","Credentials","email","password","GET_PROFILE","useProfile","token","setToken","post","then","resToken","console","log","data","catch","error","getProfile","headers","Authorization","res"],"mappings":";;AAAA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,KAAK,EAAG,gBADU;AAElBC,EAAAA,QAAQ,EAAG;AAFO,CAApB;AAKA,OAAO,MAAMC,WAAW,GAAG,aAApB;AAEP,OAAO,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAC9B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdF,IAAAA,KAAK,CACFU,IADH,CACQ,yCADR,EACmDP,WADnD,EAEGQ,IAFH,CAESC,QAAD,IAAc;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAAT,CAAcP,KAA1B;AACAC,MAAAA,QAAQ,CAACG,QAAQ,CAACG,IAAT,CAAcP,KAAf,CAAR;AACD,KALH,EAMGQ,KANH,CAMUC,KAAD,IAAW;AAChBJ,MAAAA,OAAO,CAACI,KAAR,CAAc,uBAAd,EAAuCA,KAAvC;AACD,KARH;AASD,GAVQ,EAUN,EAVM,CAAT,CAH8B,CAatB;;AAER,QAAMC,UAAU,GAAG,MAAM;AACvBlB,IAAAA,KAAK,CACFU,IADH,CAEI,2CAFJ,EAGI,EAHJ,EAII;AACES,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAG,UAASZ,KAAM;AAAjC;AADX,KAJJ,EAQGG,IARH,CAQSU,GAAD,IAAS;AACbR,MAAAA,OAAO,CAACC,GAAR,CAAYO,GAAZ;AACD,KAVH,EAWGL,KAXH,CAWUC,KAAD,IAAW;AAChBJ,MAAAA,OAAO,CAACI,KAAR,CAAc,yBAAd,EAAyCA,KAAzC;AACD,KAbH;AAcD,GAfD;;AAiBA,SAAOC,UAAP;AACD,CAjCM;;GAAMX,U","sourcesContent":["//\n\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\n\nconst Credentials = {\n  email: `tony@stark.com`,\n  password: `password123`,\n};\n\nexport const GET_PROFILE = \"GET_PROFILE\";\n\nexport const useProfile = () => {\n  const [token, setToken] = useState(\"\");\n\n  useEffect(() => {\n    axios\n      .post(\"http://localhost:3001/api/v1/user/login\", Credentials)\n      .then((resToken) => {\n        console.log(resToken.data.token);\n        setToken(resToken.data.token);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching token:\", error);\n      });\n  }, []); // Empty dependency array means this effect runs once after component mount.\n\n  const getProfile = () => {\n    axios\n      .post(\n        \"http://localhost:3001/api/v1/user/profile\",\n        {},\n        {\n          headers: { Authorization: `Bearer ${token}` },\n        }\n      )\n      .then((res) => {\n        console.log(res);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching profile:\", error);\n      });\n  };\n\n  return getProfile;\n};\n"]},"metadata":{},"sourceType":"module"}